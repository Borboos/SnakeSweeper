{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cajso\\\\Desktop\\\\Projects\\\\minesweeper\\\\src\\\\Components\\\\Grid.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Row from \"./Row\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst size = 10;\nlet initialSquareList = [];\nfor (let i = 1; i <= size; i++) {\n  let tempRow = [];\n  for (let j = 1; j <= size; j++) {\n    tempRow.push({\n      id: (i - 1) * 10 + j,\n      xPos: i,\n      yPos: j,\n      flipped: false\n    });\n  }\n  initialSquareList.push(tempRow);\n}\nfunction Grid() {\n  _s();\n  const [squareList, setSquareList] = useState(initialSquareList);\n  console.log(squareList);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Row, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_s(Grid, \"u3mzOn29NnvPlAe3uhaMxNa/Rgo=\");\n_c = Grid;\nexport default Grid;\nvar _c;\n$RefreshReg$(_c, \"Grid\");","map":{"version":3,"names":["React","useState","Row","jsxDEV","_jsxDEV","size","initialSquareList","i","tempRow","j","push","id","xPos","yPos","flipped","Grid","_s","squareList","setSquareList","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/cajso/Desktop/Projects/minesweeper/src/Components/Grid.tsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport Row from \"./Row\";\r\n\r\ninterface Tile {\r\n  id: number;\r\n  xPos: number;\r\n  yPos: number;\r\n  flipped: boolean;\r\n}\r\nconst size = 10;\r\nlet initialSquareList: Tile[][] = [];\r\nfor (let i = 1; i <= size; i++) {\r\n  let tempRow: Tile[] = [];\r\n  for (let j = 1; j <= size; j++) {\r\n    tempRow.push({\r\n      id: (i - 1) * 10 + j,\r\n      xPos: i,\r\n      yPos: j,\r\n      flipped: false,\r\n    });\r\n  }\r\n  initialSquareList.push(tempRow);\r\n}\r\n\r\nfunction Grid() {\r\n  const [squareList, setSquareList] = useState(initialSquareList);\r\n  console.log(squareList);\r\n  return (\r\n    <div>\r\n      <Row />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Grid;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,GAAG,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAQxB,MAAMC,IAAI,GAAG,EAAE;AACf,IAAIC,iBAA2B,GAAG,EAAE;AACpC,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIF,IAAI,EAAEE,CAAC,EAAE,EAAE;EAC9B,IAAIC,OAAe,GAAG,EAAE;EACxB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIJ,IAAI,EAAEI,CAAC,EAAE,EAAE;IAC9BD,OAAO,CAACE,IAAI,CAAC;MACXC,EAAE,EAAE,CAACJ,CAAC,GAAG,CAAC,IAAI,EAAE,GAAGE,CAAC;MACpBG,IAAI,EAAEL,CAAC;MACPM,IAAI,EAAEJ,CAAC;MACPK,OAAO,EAAE;IACX,CAAC,CAAC;EACJ;EACAR,iBAAiB,CAACI,IAAI,CAACF,OAAO,CAAC;AACjC;AAEA,SAASO,IAAIA,CAAA,EAAG;EAAAC,EAAA;EACd,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGjB,QAAQ,CAACK,iBAAiB,CAAC;EAC/Da,OAAO,CAACC,GAAG,CAACH,UAAU,CAAC;EACvB,oBACEb,OAAA;IAAAiB,QAAA,eACEjB,OAAA,CAACF,GAAG;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV;AAACT,EAAA,CARQD,IAAI;AAAAW,EAAA,GAAJX,IAAI;AAUb,eAAeA,IAAI;AAAC,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}