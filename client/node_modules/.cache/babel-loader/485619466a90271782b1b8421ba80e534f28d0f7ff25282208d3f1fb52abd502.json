{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cajso\\\\Desktop\\\\Projects\\\\minesweeper\\\\src\\\\Components\\\\Grid.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Row from \"./Row\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet checkedAlreadyList = [];\nlet foo = 100;\nfunction Grid() {\n  _s();\n  function getInitGrid(size) {\n    let initialSquareList = [];\n    for (let i = 0; i < size; i++) {\n      let tempRow = [];\n      for (let j = 0; j < size; j++) {\n        tempRow.push({\n          id: i * 10 + j + 1,\n          xPos: i,\n          yPos: j,\n          adjacentBombs: 0,\n          flipped: false,\n          bomb: false\n        });\n      }\n      initialSquareList.push(tempRow);\n    }\n    for (let i = 0; i < 9; i++) {\n      let randX = Math.floor(Math.random() * 10);\n      let randY = Math.floor(Math.random() * 10);\n      while (initialSquareList[randX][randY].bomb === true) {\n        randX = Math.floor(Math.random() * 10);\n        randY = Math.floor(Math.random() * 10);\n      }\n      initialSquareList[randX][randY].bomb = true;\n    }\n    for (let i = 0; i < size; i++) {\n      for (let j = 0; j < size; j++) {\n        for (let k = -1; k <= 1; k++) {\n          if (i - 1 >= 0 && j + k >= 0 && j + k <= 9 && initialSquareList[i - 1][j + k].bomb === true) initialSquareList[i][j].adjacentBombs++;\n        }\n        for (let k = -1; k <= 1; k++) {\n          if (k !== 0 && j + k >= 0 && j + k <= 9 && initialSquareList[i][j + k].bomb === true) initialSquareList[i][j].adjacentBombs++;\n        }\n        for (let k = -1; k <= 1; k++) {\n          if (i + 1 <= 9 && j + k >= 0 && j + k <= 9 && initialSquareList[i + 1][j + k].bomb === true) initialSquareList[i][j].adjacentBombs++;\n        }\n      }\n    }\n    return initialSquareList;\n  }\n  function flipAdjacentSquares(id) {\n    let tempList = [...squareList];\n    for (let i = 0; i < squareList.length; i++) for (let j = 0; j < squareList.length; j++) if (tempList[i][j].id === id && tempList[i][j].bomb === false && tempList[i][j].adjacentBombs === 0 && !checkedAlreadyList.includes(id)) {\n      if (foo > 0) {\n        console.log(`FOO: ${foo}`);\n        foo--;\n        console.log(id);\n        console.log(checkedAlreadyList);\n      }\n      tempList[i][j].flipped = true;\n      setSquareList(tempList);\n      for (let k = -1; k <= 1; k++) {\n        if (i - 1 >= 0 && j + k >= 0 && j + k <= 9) {\n          checkedAlreadyList.push(id);\n          flipAdjacentSquares(tempList[i - 1][j + k].id);\n        }\n      }\n      for (let k = -1; k <= 1; k++) {\n        if (k !== 0 && j + k >= 0 && j + k <= 9) {\n          checkedAlreadyList.push(id);\n          flipAdjacentSquares(tempList[i][j + k].id);\n        }\n      }\n      for (let k = -1; k <= 1; k++) {\n        if (i + 1 <= 9 && j + k >= 0 && j + k <= 9) {\n          checkedAlreadyList.push(id);\n          flipAdjacentSquares(tempList[i + 1][j + k].id);\n        }\n      }\n    }\n  }\n  function gridClickUpdate(id) {\n    let tempList = [...squareList];\n    for (let i = 0; i < squareList.length; i++) for (let j = 0; j < squareList.length; j++) if (tempList[i][j].id === id) tempList[i][j].flipped = true;\n    setSquareList(tempList);\n    flipAdjacentSquares(id);\n  }\n  const [squareList, setSquareList] = useState(() => getInitGrid(10));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Grid\",\n    children: [squareList.map((row, index) => /*#__PURE__*/_jsxDEV(Row, {\n      test: false,\n      row: row,\n      updateSquare: gridClickUpdate\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), squareList.map((row, index) => /*#__PURE__*/_jsxDEV(Row, {\n      test: true,\n      row: row,\n      updateSquare: gridClickUpdate\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 5\n  }, this);\n}\n_s(Grid, \"HLn2xbSdixS0BTjPMqYbhN0uRCU=\");\n_c = Grid;\nexport default Grid;\nvar _c;\n$RefreshReg$(_c, \"Grid\");","map":{"version":3,"names":["React","useState","Row","jsxDEV","_jsxDEV","checkedAlreadyList","foo","Grid","_s","getInitGrid","size","initialSquareList","i","tempRow","j","push","id","xPos","yPos","adjacentBombs","flipped","bomb","randX","Math","floor","random","randY","k","flipAdjacentSquares","tempList","squareList","length","includes","console","log","setSquareList","gridClickUpdate","className","children","map","row","index","test","updateSquare","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/cajso/Desktop/Projects/minesweeper/src/Components/Grid.tsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport Row from \"./Row\";\r\nimport { SquareType } from \"../Types\";\r\n\r\nlet checkedAlreadyList: number[] = [];\r\nlet foo = 100;\r\n\r\nfunction Grid() {\r\n  function getInitGrid(size: number) {\r\n    let initialSquareList: SquareType[][] = [];\r\n    for (let i = 0; i < size; i++) {\r\n      let tempRow: SquareType[] = [];\r\n      for (let j = 0; j < size; j++) {\r\n        tempRow.push({\r\n          id: i * 10 + j + 1,\r\n          xPos: i,\r\n          yPos: j,\r\n          adjacentBombs: 0,\r\n          flipped: false,\r\n          bomb: false,\r\n        });\r\n      }\r\n      initialSquareList.push(tempRow);\r\n    }\r\n    for (let i = 0; i < 9; i++) {\r\n      let randX = Math.floor(Math.random() * 10);\r\n      let randY = Math.floor(Math.random() * 10);\r\n      while (initialSquareList[randX][randY].bomb === true) {\r\n        randX = Math.floor(Math.random() * 10);\r\n        randY = Math.floor(Math.random() * 10);\r\n      }\r\n      initialSquareList[randX][randY].bomb = true;\r\n    }\r\n    for (let i = 0; i < size; i++) {\r\n      for (let j = 0; j < size; j++) {\r\n        for (let k = -1; k <= 1; k++) {\r\n          if (\r\n            i - 1 >= 0 &&\r\n            j + k >= 0 &&\r\n            j + k <= 9 &&\r\n            initialSquareList[i - 1][j + k].bomb === true\r\n          )\r\n            initialSquareList[i][j].adjacentBombs++;\r\n        }\r\n        for (let k = -1; k <= 1; k++) {\r\n          if (\r\n            k !== 0 &&\r\n            j + k >= 0 &&\r\n            j + k <= 9 &&\r\n            initialSquareList[i][j + k].bomb === true\r\n          )\r\n            initialSquareList[i][j].adjacentBombs++;\r\n        }\r\n        for (let k = -1; k <= 1; k++) {\r\n          if (\r\n            i + 1 <= 9 &&\r\n            j + k >= 0 &&\r\n            j + k <= 9 &&\r\n            initialSquareList[i + 1][j + k].bomb === true\r\n          )\r\n            initialSquareList[i][j].adjacentBombs++;\r\n        }\r\n      }\r\n    }\r\n    return initialSquareList;\r\n  }\r\n  function flipAdjacentSquares(id: number) {\r\n    let tempList = [...squareList];\r\n    for (let i = 0; i < squareList.length; i++)\r\n      for (let j = 0; j < squareList.length; j++)\r\n        if (\r\n          tempList[i][j].id === id &&\r\n          tempList[i][j].bomb === false &&\r\n          tempList[i][j].adjacentBombs === 0 &&\r\n          !checkedAlreadyList.includes(id)\r\n        ) {\r\n          if (foo > 0) {\r\n            console.log(`FOO: ${foo}`);\r\n            foo--;\r\n            console.log(id);\r\n            console.log(checkedAlreadyList);\r\n          }\r\n          tempList[i][j].flipped = true;\r\n          setSquareList(tempList);\r\n          for (let k = -1; k <= 1; k++) {\r\n            if (i - 1 >= 0 && j + k >= 0 && j + k <= 9) {\r\n              checkedAlreadyList.push(id);\r\n              flipAdjacentSquares(tempList[i - 1][j + k].id);\r\n            }\r\n          }\r\n          for (let k = -1; k <= 1; k++) {\r\n            if (k !== 0 && j + k >= 0 && j + k <= 9) {\r\n              checkedAlreadyList.push(id);\r\n              flipAdjacentSquares(tempList[i][j + k].id);\r\n            }\r\n          }\r\n          for (let k = -1; k <= 1; k++) {\r\n            if (i + 1 <= 9 && j + k >= 0 && j + k <= 9) {\r\n              checkedAlreadyList.push(id);\r\n              flipAdjacentSquares(tempList[i + 1][j + k].id);\r\n            }\r\n          }\r\n        }\r\n  }\r\n  function gridClickUpdate(id: number) {\r\n    let tempList = [...squareList];\r\n    for (let i = 0; i < squareList.length; i++)\r\n      for (let j = 0; j < squareList.length; j++)\r\n        if (tempList[i][j].id === id) tempList[i][j].flipped = true;\r\n    setSquareList(tempList);\r\n    flipAdjacentSquares(id);\r\n  }\r\n  const [squareList, setSquareList] = useState(() => getInitGrid(10));\r\n  return (\r\n    <div className=\"Grid\">\r\n      {squareList.map((row, index) => (\r\n        <Row\r\n          key={index}\r\n          test={false}\r\n          row={row}\r\n          updateSquare={gridClickUpdate}\r\n        />\r\n      ))}\r\n      <br></br>\r\n      {squareList.map((row, index) => (\r\n        <Row key={index} test={true} row={row} updateSquare={gridClickUpdate} />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Grid;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}