{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cajso\\\\Desktop\\\\Projects\\\\minesweeper\\\\src\\\\Components\\\\Grid.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Row from \"./Row\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Grid() {\n  _s();\n  function getInitGrid(size) {\n    let initialSquareList = [];\n    for (let i = 1; i <= size; i++) {\n      let tempRow = [];\n      for (let j = 1; j <= size; j++) {\n        tempRow.push({\n          id: (i - 1) * 10 + j,\n          xPos: i,\n          yPos: j,\n          adjacentBombs: 0,\n          flipped: false,\n          bomb: false\n        });\n      }\n      initialSquareList.push(tempRow);\n    }\n    for (let i = 0; i < 9; i++) {\n      let randX = Math.floor(Math.random() * 10);\n      let randY = Math.floor(Math.random() * 10);\n      while (initialSquareList[randX][randY].bomb === true) {\n        randX = Math.floor(Math.random() * 10);\n        randY = Math.floor(Math.random() * 10);\n      }\n      initialSquareList[randX][randY].bomb = true;\n    }\n    return initialSquareList;\n  }\n  function gridClickUpdate(id) {\n    let tempList = [...squareList];\n    for (let i = 0; i < squareList.length; i++) for (let j = 0; j < squareList.length; j++) if (tempList[i][j].id === id) tempList[i][j].flipped = true;\n    setSquareList(tempList);\n  }\n  const [squareList, setSquareList] = useState(() => getInitGrid(10));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Grid\",\n    children: squareList.map((row, index) => /*#__PURE__*/_jsxDEV(Row, {\n      row: row,\n      updateSquare: gridClickUpdate\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_s(Grid, \"HLn2xbSdixS0BTjPMqYbhN0uRCU=\");\n_c = Grid;\nexport default Grid;\nvar _c;\n$RefreshReg$(_c, \"Grid\");","map":{"version":3,"names":["React","useState","Row","jsxDEV","_jsxDEV","Grid","_s","getInitGrid","size","initialSquareList","i","tempRow","j","push","id","xPos","yPos","adjacentBombs","flipped","bomb","randX","Math","floor","random","randY","gridClickUpdate","tempList","squareList","length","setSquareList","className","children","map","row","index","updateSquare","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/cajso/Desktop/Projects/minesweeper/src/Components/Grid.tsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport Row from \"./Row\";\r\nimport { SquareType } from \"../Types\";\r\n\r\nfunction Grid() {\r\n  function getInitGrid(size: number) {\r\n    let initialSquareList: SquareType[][] = [];\r\n    for (let i = 1; i <= size; i++) {\r\n      let tempRow: SquareType[] = [];\r\n      for (let j = 1; j <= size; j++) {\r\n        tempRow.push({\r\n          id: (i - 1) * 10 + j,\r\n          xPos: i,\r\n          yPos: j,\r\n          adjacentBombs: 0,\r\n          flipped: false,\r\n          bomb: false,\r\n        });\r\n      }\r\n      initialSquareList.push(tempRow);\r\n    }\r\n    for (let i = 0; i < 9; i++) {\r\n      let randX = Math.floor(Math.random() * 10);\r\n      let randY = Math.floor(Math.random() * 10);\r\n      while (initialSquareList[randX][randY].bomb === true) {\r\n        randX = Math.floor(Math.random() * 10);\r\n        randY = Math.floor(Math.random() * 10);\r\n      }\r\n      initialSquareList[randX][randY].bomb = true;\r\n    }\r\n    return initialSquareList;\r\n  }\r\n  function gridClickUpdate(id: number) {\r\n    let tempList = [...squareList];\r\n    for (let i = 0; i < squareList.length; i++)\r\n      for (let j = 0; j < squareList.length; j++)\r\n        if (tempList[i][j].id === id) tempList[i][j].flipped = true;\r\n    setSquareList(tempList);\r\n  }\r\n  const [squareList, setSquareList] = useState(() => getInitGrid(10));\r\n  return (\r\n    <div className=\"Grid\">\r\n      {squareList.map((row, index) => (\r\n        <Row key={index} row={row} updateSquare={gridClickUpdate} />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Grid;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}