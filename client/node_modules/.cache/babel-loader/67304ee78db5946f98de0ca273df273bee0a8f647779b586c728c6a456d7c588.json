{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cajso\\\\Desktop\\\\Projects\\\\minesweeper\\\\src\\\\Components\\\\Grid.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Row from \"./Row\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction getInitGrid(size) {\n  let initialSquareList = [];\n  for (let i = 1; i <= size; i++) {\n    let tempRow = [];\n    for (let j = 1; j <= size; j++) {\n      tempRow.push({\n        id: (i - 1) * 10 + j,\n        xPos: i,\n        yPos: j,\n        flipped: false,\n        bomb: false\n      });\n    }\n    initialSquareList.push(tempRow);\n  }\n  for (let i = 0; i < 9; i++) {\n    let randX = Math.floor(Math.random() * 10);\n    let randY = Math.floor(Math.random() * 10);\n    while (initialSquareList[randX][randY].bomb === true) {\n      randX = Math.floor(Math.random() * 10);\n      randY = Math.floor(Math.random() * 10);\n    }\n    initialSquareList[randX][randY].bomb = true;\n  }\n  return initialSquareList;\n}\nfunction Grid() {\n  _s();\n  const [squareList, setSquareList] = useState(() => getInitGrid(10));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Grid\",\n    children: squareList.map((row, index) => /*#__PURE__*/_jsxDEV(Row, {\n      row: row,\n      updateSquare: setSquareList\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_s(Grid, \"HLn2xbSdixS0BTjPMqYbhN0uRCU=\");\n_c = Grid;\nexport default Grid;\nvar _c;\n$RefreshReg$(_c, \"Grid\");","map":{"version":3,"names":["React","useState","Row","jsxDEV","_jsxDEV","getInitGrid","size","initialSquareList","i","tempRow","j","push","id","xPos","yPos","flipped","bomb","randX","Math","floor","random","randY","Grid","_s","squareList","setSquareList","className","children","map","row","index","updateSquare","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/cajso/Desktop/Projects/minesweeper/src/Components/Grid.tsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport Row from \"./Row\";\r\nimport { SquareType } from \"../Types\";\r\n\r\nfunction getInitGrid(size: number) {\r\n  let initialSquareList: SquareType[][] = [];\r\n  for (let i = 1; i <= size; i++) {\r\n    let tempRow: SquareType[] = [];\r\n    for (let j = 1; j <= size; j++) {\r\n      tempRow.push({\r\n        id: (i - 1) * 10 + j,\r\n        xPos: i,\r\n        yPos: j,\r\n        flipped: false,\r\n        bomb: false,\r\n      });\r\n    }\r\n    initialSquareList.push(tempRow);\r\n  }\r\n  for (let i = 0; i < 9; i++) {\r\n    let randX = Math.floor(Math.random() * 10);\r\n    let randY = Math.floor(Math.random() * 10);\r\n    while (initialSquareList[randX][randY].bomb === true) {\r\n      randX = Math.floor(Math.random() * 10);\r\n      randY = Math.floor(Math.random() * 10);\r\n    }\r\n    initialSquareList[randX][randY].bomb = true;\r\n  }\r\n  return initialSquareList;\r\n}\r\n\r\nfunction Grid() {\r\n  const [squareList, setSquareList] = useState(() => getInitGrid(10));\r\n  return (\r\n    <div className=\"Grid\">\r\n      {squareList.map((row, index) => (\r\n        <Row key={index} row={row} updateSquare={setSquareList} />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Grid;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,GAAG,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGxB,SAASC,WAAWA,CAACC,IAAY,EAAE;EACjC,IAAIC,iBAAiC,GAAG,EAAE;EAC1C,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIF,IAAI,EAAEE,CAAC,EAAE,EAAE;IAC9B,IAAIC,OAAqB,GAAG,EAAE;IAC9B,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIJ,IAAI,EAAEI,CAAC,EAAE,EAAE;MAC9BD,OAAO,CAACE,IAAI,CAAC;QACXC,EAAE,EAAE,CAACJ,CAAC,GAAG,CAAC,IAAI,EAAE,GAAGE,CAAC;QACpBG,IAAI,EAAEL,CAAC;QACPM,IAAI,EAAEJ,CAAC;QACPK,OAAO,EAAE,KAAK;QACdC,IAAI,EAAE;MACR,CAAC,CAAC;IACJ;IACAT,iBAAiB,CAACI,IAAI,CAACF,OAAO,CAAC;EACjC;EACA,KAAK,IAAID,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;IAC1B,IAAIS,KAAK,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,EAAE,CAAC;IAC1C,IAAIC,KAAK,GAAGH,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,EAAE,CAAC;IAC1C,OAAOb,iBAAiB,CAACU,KAAK,CAAC,CAACI,KAAK,CAAC,CAACL,IAAI,KAAK,IAAI,EAAE;MACpDC,KAAK,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,EAAE,CAAC;MACtCC,KAAK,GAAGH,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,EAAE,CAAC;IACxC;IACAb,iBAAiB,CAACU,KAAK,CAAC,CAACI,KAAK,CAAC,CAACL,IAAI,GAAG,IAAI;EAC7C;EACA,OAAOT,iBAAiB;AAC1B;AAEA,SAASe,IAAIA,CAAA,EAAG;EAAAC,EAAA;EACd,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGxB,QAAQ,CAAC,MAAMI,WAAW,CAAC,EAAE,CAAC,CAAC;EACnE,oBACED,OAAA;IAAKsB,SAAS,EAAC,MAAM;IAAAC,QAAA,EAClBH,UAAU,CAACI,GAAG,CAAC,CAACC,GAAG,EAAEC,KAAK,kBACzB1B,OAAA,CAACF,GAAG;MAAa2B,GAAG,EAAEA,GAAI;MAACE,YAAY,EAAEN;IAAc,GAA7CK,KAAK;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAA0C,CAC1D;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACZ,EAAA,CATQD,IAAI;AAAAc,EAAA,GAAJd,IAAI;AAWb,eAAeA,IAAI;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}